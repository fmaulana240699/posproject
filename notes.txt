nav menu management jadi dropdown > satuin
remove checkbox bulk action
active nav

done:
- finishing template + url #done
- templates sisi client #done
- logic generate qr code per table id + views nya #done
- quantity per menu item #done
- tambah alamat + atas nama di table order #done
- fitur pembayaran langsung hardcode aja #done
- checkout per table #done
- put category in menu #done
- tombol cancel and confirm payment #done
- cart ada fitur remove #done
- order quantity in history order #done
- perlu add form name + alamat #done
- login admin #done
- restrict admin page #done
- order per dish category #done
- tiap ada order, bahan baku harus berkurang (associate menu item with bahan baku) #done
- button tambah row di list ingredient add menu item #done
- ubah upload file type input #done
- upload gambar #done
- deduct stock cuma 1 menu, di table yg ke add cuma 1 anw #done
- kalo decimal bermasalah kurangi stock nya #done
- benerin redirect #done
- benerin icon #done
- auto print #done
- bedain struk online / dine in #done
- bedain link nav order online / dine in #done
- cart ga ada table number #done
- dashboard page #done
- order online jadi dine-in terus #done
- edit stock error input type #done
- benerin active url #done
- chart total pendapatan #done
- show image #done
- styling input type
- chart penjualan today
- pagination

todo:
- benerin penulisan koma
- order history by invoice
- finalize design template



optional:
- kasih alert or pop up after action
- stock harus selaras satuannya
- no hape / email untuk konfirmasi pengiriman
- refactor confirm payment
- disable checkout when empty
- refactor order & cart > mungkin cart pake localstorage, order pake db






####### Dashboard Query ########

today = timezone.now().date()
start_of_week = today - timedelta(days=today.weekday())  # Monday as the start of the week
start_of_month = today.replace(day=1)

# Per day
most_bought_day = Order.objects.filter(created_at__date=today) \
    .values('menu_item__nama_menu') \
    .annotate(total_bought=Count('menu_item')) \
    .order_by('-total_bought')

# Per week
most_bought_week = Order.objects.filter(created_at__date__gte=start_of_week) \
    .values('menu_item__nama_menu') \
    .annotate(total_bought=Count('menu_item')) \
    .order_by('-total_bought')

# Per month
most_bought_month = Order.objects.filter(created_at__date__gte=start_of_month) \
    .values('menu_item__nama_menu') \
    .annotate(total_bought=Count('menu_item')) \
    .order_by('-total_bought')


# Per day
total_invoice_items_day = Invoice.objects.filter(created_at__date=today) \
    .aggregate(total_items=Sum('order_item__quantity'))

# Per week
total_invoice_items_week = Invoice.objects.filter(created_at__date__gte=start_of_week) \
    .aggregate(total_items=Sum('order_item__quantity'))

# Per month
total_invoice_items_month = Invoice.objects.filter(created_at__date__gte=start_of_month) \
    .aggregate(total_items=Sum('order_item__quantity'))

# Per day
total_harga_day = Invoice.objects.filter(created_at__date=today) \
    .aggregate(total_harga=Sum('total_harga'))

# Per week
total_harga_week = Invoice.objects.filter(created_at__date__gte=start_of_week) \
    .aggregate(total_harga=Sum('total_harga'))

# Per month
total_harga_month = Invoice.objects.filter(created_at__date__gte=start_of_month) \
    .aggregate(total_harga=Sum('total_harga'))
